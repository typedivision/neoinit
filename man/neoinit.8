.TH neoinit 8
.SH NAME
neoinit \- a service start and supervising daemon,
can be used as UNIX process no 1

.SH SYNOPSIS
.B neoinit
[\fISERVICE\fR]...

.SH DESCRIPTION
.B neoinit
can start, stop and monitor services.
Each service gets its own directory under /etc/neoinit containing
at least a program file or a symlink to an executable to start.
.PP
With no given \fISERVICE\fR
.B neoinit
will start the service defined in /etc/neoinit/default
which usually contains a file named
.B depends
specifying which other services are to be started at bootup.

.SH USAGE
.B neoinit
will try to run the command line arguments as services.
If none of the services worked (or none were given),
.B neoinit
will spawn the service "default".
.PP
Optionally if a service "boot" was found, it is started before the control pipes for
.B neorc
are opened.
This is necessary eg. to mount overlayfs media to make a read-only /etc directory writeable.
.PP
For global configurations there is a plain text file /etc/neoinit/neo.conf that can contain one
name=value per line. The entries become part of the environment variables for each started service.
The neo.conf file is read after boot and before default service.
.PP
Each service directory can contain the following files:
.TP 0
.B run
is the executable or a symbolic link to the program to start.
.TP
.B setup
is an executable or a symbolic link to a program which is started just before the actual service.
A service with a setup process will only be started if the setup was finished sucessfully.
.TP
.B depends
a plain text file containing a service name per line.
Each of these services will be started before this service is started.
.TP
.B params
a plain text file containing the command line parameters for the
service program, one parameter per line.
.TP
.B environ
a plain text file containing environment variables for the
service program, one variable in the form of 'A=1 2 3' per line.
.TP
.B respawn
touch this file to make
.B neoinit
respawn the process when it dies.
This should be touched for getty and network servers.
.TP
.B sync
touch this file to make
.B neoinit
wait until the service ends.
sync is mutually exclusive with respawn.
.TP
.B pidfile
a plain file containing the path to a process pid file.
If the given pid file path exists and contains a PID of a runnning process, then the service PID
will be replaced by that PID when it is finished.
This is usefull for services forking themselves in the background but creating a *.pid file in
/var/run for example.
.TP
.B log
if this directory exists, it is taken as a service and
.B neoinit
creates a pipe between stdout of this service and stdin of the log service.
If the log service can not be started, this service will block if it
writes to stdout.
File descriptors will be reused, i.e. if the log process dies and is restarted,
no log entries will be lost and there will be no SIGPIPE.

.SH AUTHOR
.B neoinit
is based on
.B minit
written by Felix von Leitner.
.I http://www.fefe.de/minit/

.SH "SEE ALSO"
neorc(8)
